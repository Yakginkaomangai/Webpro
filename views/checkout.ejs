<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Checkout - Restaurant</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=DM+Serif+Text&family=Oswald:wght@200..700&family=Roboto+Slab:wght@100..900&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô */
        body {
            font-family: 'Roboto Slab', serif;
            background-color: #F0F2F5; /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î */
            color: #333;
            padding-top: 70px; /* ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô navbar ‡∏ö‡∏±‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ */
        }

        /* Navbar */
        .navbar {
            padding: 10px 0;
            background-color: #2E8B57 !important; /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß */
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand img {
            transition: transform 0.3s;
        }

        .navbar-brand img:hover {
            transform: scale(1.1);
        }

        .navbar-nav .nav-link {
            font-weight: bold;
            transition: color 0.3s;
            color: #ffffff !important; /* ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥ */
        }

        .navbar-nav .nav-link:hover {
            color: #2E8B57 !important;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏∏‡πà‡∏° Login / Register */
        .navbar-nav .nav-item .nav-link[href*="login.html"] {
            background-color: #2E8B57;
            border-radius: 8px;
            color: white !important;
            padding-left: 20px;
            padding-right: 20px;
            font-size: small;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏∏‡πà‡∏° */
        .btn {
            font-weight: bold;
            border-radius: 8px;
        }

        .btn-success {
            background-color: #2E8B57;
            border-color: #2E8B57;
        }

        .btn-success:hover {
            background-color: #228B22;
            border-color: #228B22;
        }

        /* ‡∏Å‡∏≤‡∏£‡πå‡∏î */
        .card {
            background: white;
            border-radius: 12px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-top: 20px;
        }

        .card h4, .card h5 {
            color: #2E8B57;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏°‡∏ô‡∏π */
        .menu-item {
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .menu-item:hover {
            transform: translateY(-5px);
            box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.15);
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏∏‡πà‡∏° Add to Cart */
        .btn.rounded-circle {
            width: 45px;
            height: 45px;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #2E8B57;
            border: none;
            transition: background 0.3s;
        }

        .btn.rounded-circle:hover {
            background-color: #228B22;
        }

        /* ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */
        .order-summary {
            border: 2px solid #2E8B57;
            background-color: #fff;
            padding: 15px;
            border-radius: 12px;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Order */
        .order-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid #ddd;
            padding: 10px 0;
        }

        .order-item img {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            margin-right: 10px;
        }

        .order-item .order-details {
            flex-grow: 1;
        }

        .order-item .order-actions {
            display: flex;
            align-items: center;
        }

        .order-item .order-actions button {
            background-color: #2E8B57;
            color: white;
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 18px;
            margin: 0 5px;
        }

        /* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î */
        .form-control {
            border-radius: 8px;
            border: 2px solid #2E8B57;
        }

        /* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */
        .btn-order {
            background-color: #3CB371;
            font-size: 18px;
            padding: 10px;
            color: white;
            font-weight: bold;
            border-radius: 8px;
        }

        .add-to-cart {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            font-size: 18px;
            line-height: 20px;
            text-align: center;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }


        .btn-order:hover {
            background-color: #2E8B57;
        }

        .delivery-option.btn-success {
            color: white !important;
        }

        .schedule-option.btn-success {
            color: white !important;
        }

    </style>
</head>
<body class="d-flex flex-column min-vh-100">

    <%- include('partials/navbar') %>

    <div class="container mb-5">
        <div class="row g-4">
            <div class="col-md-6">
                <div class="card" p-3>
                    <h4>Delivery Types</h4>
                    <div class="delivery-type" mb-3>
                        <button class="btn btn-outline-secondary  delivery-option" data-type="delivery">üöÄ 30 Minutes Delivery</button>
                        <button class="btn btn-outline-secondary delivery-option" data-type="pickup">üì¶ Pick Up</button>
                    </div>
                    <input type="hidden" id="deliveryType" value="delivery">                    
                    <input type="text" class="form-control mt-3" placeholder="Add Delivery Address">
                </div>
                <div class="card mt-3">
                    <h5>Schedule Delivery</h5>
                    <div class="schedule-delivery">
                        <button class="btn btn-outline-secondary schedule-option" data-time="10:00">10:00</button>
                        <button class="btn btn-outline-secondary schedule-option" data-time="12:00">12:00</button>
                        <button class="btn btn-outline-secondary schedule-option" data-time="14:00">14:00</button>
                    </div>
                    <input type="hidden" id="deliveryTime" value="10:00">                    
                </div>
                <div class="card mt-3">
                    <h5>Payment Method</h5>
                    <div class="mb-2">
                        <input type="radio" name="payment" checked> üíµ Cash
                    </div>
                    <div class="mb-2">
                        <input type="radio" name="payment"> üí≥ Credit/Debit Card
                    </div>
                    <div class="mb-2">
                        <input type="radio" name="payment"> üì± Mobile Banking
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <h4>Recommended Menu</h4>
                    <div class="row mt-3 mb-5">
                        <% if (recommendedMenu && recommendedMenu.length > 0) { %>
                            <% recommendedMenu.forEach(item => { %>
                                <div class="col-md-4">
                                    <div class="menu-item text-start mt-2 position-relative p-3" style="background-color: #fff; border-radius: 12px;">
                                        <img src="<%= item.img ? item.img : '/img/default.jpg' %>" class="img-fluid w-100 mt-2">
                                        <p><%= item.name %> - <%= item.price %> THB</p>
                                        <button class="btn btn-success btn-sm add-to-cart" data-id="<%= item.menu_id %>" data-name="<%= item.name %>" data-price="<%= item.price %>" data-img="<%= item.img %>">
                                            <strong>+</strong>
                                        </button>
                                    </div>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <p>No recommended menu available</p>
                        <% } %>                        
                    </div>
                </div>
                <div class="card mt-3 order-summary p-3">
                    <h4>Order Items (<%= cartItems ? cartItems.length : 0 %>)</h4>
                    <% if (cartItems.length > 0) { %>
                        <% cartItems.forEach(item => { %>
                            <div class="order-item d-flex justify-content-between align-items-center p-2 border-bottom">
                                <span><%= item.product_name %> x <%= item.quantity %> (<%= item.price * item.quantity %> ‡∏ø)</span>
                                <button class="btn btn-danger btn-sm remove-item" data-id="<%= item.id %>">‡∏•‡∏ö</button>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <p>No items in cart</p>
                    <% } %>                    
                </div>
                <div class="card mt-3">
                    <h4>Discounts & Order Summary</h4>
                    <div class="mb-2">
                        <input type="text" class="form-control" placeholder="Enter Promo Code">
                        <button class="btn btn-outline-success mt-2">Apply</button>
                    </div>
                        <p>Subtotal: ‡∏ø<%= typeof subtotal !== 'undefined' ? subtotal : 0 %></p>
                        <p>Delivery Fee: Free</p>
                        <h5><span id="totalAmount">Total: ‡∏ø<%= typeof total !== 'undefined' ? total : 0 %></span></h5>
                    <button id="orderNow" class="btn btn-success w-100">Order Now ‡∏ø<span id="totalAmount"></span></button>
                </div>
            </div>
        </div>

        <%- include('partials/footer') %>

    </div>

    <script>
        document.addEventListener("DOMContentLoaded", async function () {
            let totalElement = document.getElementById("totalAmount");

            if (!totalElement) {
                alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö Total Amount ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö!");
                return;
            }

            let total_price = parseFloat(totalElement.textContent.trim()) || 0;
            console.log("üì¶ Total Price ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡πÑ‡∏î‡πâ:", total_price);

            document.querySelectorAll(".add-to-cart").forEach(button => {
                button.addEventListener("click", function () {
                    let product_id = this.dataset.id;
                    let name = this.dataset.name;
                    let price = parseFloat(this.dataset.price);
                    let img = this.dataset.img;
                    let quantity = 1;


        
                    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                    fetch('/cart/add', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ product_id, product_name: name, price, quantity })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message) {
                            alert(`${name} 1 ‡∏ä‡∏¥‡πâ‡∏ô‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤!`);
                            fetchCart(); // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                        } else {
                            alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${data.error}`);
                        }
                    })
                    .catch(error => {
                        console.error("Error adding to cart:", error);
                        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
                    });
                });
            });
            // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
            document.querySelectorAll(".delivery-option").forEach(button => {
                button.addEventListener("click", function () {
                    document.getElementById("deliveryType").value = this.dataset.type;
        
                    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                    document.querySelectorAll(".delivery-option").forEach(btn => btn.classList.remove("btn-success"));
                    this.classList.add("btn-success");
                });
            });
        
            // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
            document.querySelectorAll(".schedule-option").forEach(button => {
                button.addEventListener("click", function () {
                    document.getElementById("deliveryTime").value = this.dataset.time;
        
                    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                    document.querySelectorAll(".schedule-option").forEach(btn => btn.classList.remove("btn-success"));
                    this.classList.add("btn-success");
                });
            });
            document.getElementById("orderNow").addEventListener("click", async function () {
    let user_id = localStorage.getItem("user_id");

    if (!user_id) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠!");
        return;
    }

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏ß‡∏°‡∏à‡∏≤‡∏Å Total Amount
    let totalElement = document.getElementById("totalAmount");
    console.log("üìå totalElement:", totalElement); // ‡∏î‡∏π‡∏ß‡πà‡∏≤‡πÄ‡∏à‡∏≠ element ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!totalElement) {
    alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö Total Amount ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö!");
} else {
    let total_price = parseFloat(totalElement.textContent.trim()) || 0;
    console.log("üì¶ Total Price ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡πÑ‡∏î‡πâ:", total_price);
}
    let payment_method = document.querySelector('input[name="payment"]:checked')?.value || "‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î";
    let delivery_type = document.getElementById("deliveryType").value;
    let delivery_time = document.getElementById("deliveryTime").value;

    console.log("üì¶ ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ API:", { user_id, total_price, payment_method, delivery_type, delivery_time });

    try {
        let response = await fetch("http://localhost:3000/order", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ user_id, total_price, payment_method, delivery_type, delivery_time })
        });

        if (!response.ok) throw new Error("Server Error");

        let data = await response.json();

        if (data.success) {
            alert("‚úÖ Order placed successfully!");
            //‡∏™‡∏±‡πà‡∏á order ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ home
            window.location.href = `/`;
        } else {
            alert("‚ùå Order failed: " + data.message);
        }
    } catch (error) {
        console.error("‚ùå Order Error:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå!");
    }
});

        });
    
            // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
            async function fetchCart() {
                const response = await fetch('/cart/items');
                const data = await response.json();
            
                const cartBox = document.querySelector('.order-summary');
                let totalPrice = 0;
            
                // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                cartBox.innerHTML = `<h4>Order Items (${data.cart.length})</h4>`;
            
                if (data.cart.length > 0) {
                    // ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                    cartBox.innerHTML += data.cart.map(item => {
                        let itemTotal = item.price * item.quantity;
                        totalPrice += itemTotal;
            
                        return `
                            <div class="order-item d-flex justify-content-between align-items-center p-2 border-bottom">
                                <span>${item.product_name} x ${item.quantity} (${itemTotal} ‡∏ø)</span>
                                <button class="btn btn-danger btn-sm remove-item" data-id="${item.id}">‡∏•‡∏ö</button>
                            </div>
                        `;
                    }).join('');
                } else {
                    // ‡∏´‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á
                    cartBox.innerHTML += "<p class='text-muted'>‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤</p>";
                }
            
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
                document.getElementById('totalAmount').textContent = totalPrice;
        
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                document.querySelectorAll('.remove-item').forEach(button => {
                    button.addEventListener('click', removeFromCart); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ removeFromCart ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
                });
                location.reload();
            }

            document.querySelectorAll(".remove-item").forEach(button => {
                button.addEventListener("click", function (event) {
                    let product_id = event.target.dataset.id;  // ‡πÉ‡∏ä‡πâ event.target ‡πÅ‡∏ó‡∏ô this
                    console.log("Product ID:", product_id);  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                    removeFromCart(product_id); 
                });
            });
            
            

            // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
            async function removeFromCart(cartId) {
                console.log("Removing product ID:", cartId);  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
                const response = await fetch('/cart/remove', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ cart_id: cartId })
                });
                const data = await response.json();
                if (response.ok) {
                    alert('‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
                    fetchCart();
                } else {
                    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + data.error);
                }
            }


        
    </script>

</body>
</html> 
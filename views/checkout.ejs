<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Checkout - Restaurant</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=DM+Serif+Text&family=Oswald:wght@200..700&family=Roboto+Slab:wght@100..900&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô */
        body {
            font-family: 'Roboto Slab', serif;
            background-color: #F0F2F5; /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î */
            color: #333;
            padding-top: 70px; /* ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô navbar ‡∏ö‡∏±‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ */
        }

        /* Navbar */
        .navbar {
            padding: 10px 0;
            background-color: #2E8B57 !important; /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß */
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand img {
            transition: transform 0.3s;
        }

        .navbar-brand img:hover {
            transform: scale(1.1);
        }

        .navbar-nav .nav-link {
            font-weight: bold;
            transition: color 0.3s;
            color: #ffffff !important; /* ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥ */
        }

        .navbar-nav .nav-link:hover {
            color: #2E8B57 !important;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏∏‡πà‡∏° Login / Register */
        .navbar-nav .nav-item .nav-link[href*="login.html"] {
            background-color: #2E8B57;
            border-radius: 8px;
            color: white !important;
            padding-left: 20px;
            padding-right: 20px;
            font-size: small;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏∏‡πà‡∏° */
        .btn {
            font-weight: bold;
            border-radius: 8px;
        }

        .btn-success {
            background-color: #2E8B57;
            border-color: #2E8B57;
        }

        .btn-success:hover {
            background-color: #228B22;
            border-color: #228B22;
        }

        /* ‡∏Å‡∏≤‡∏£‡πå‡∏î */
        .card {
            background: white;
            border-radius: 12px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-top: 20px;
        }

        .card h4, .card h5 {
            color: #2E8B57;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏°‡∏ô‡∏π */
        .menu-item {
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .menu-item:hover {
            transform: translateY(-5px);
            box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.15);
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏∏‡πà‡∏° Add to Cart */
        .btn.rounded-circle {
            width: 45px;
            height: 45px;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #2E8B57;
            border: none;
            transition: background 0.3s;
        }

        .btn.rounded-circle:hover {
            background-color: #228B22;
        }

        /* ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */
        .order-summary {
            border: 2px solid #2E8B57;
            background-color: #fff;
            padding: 15px;
            border-radius: 12px;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Order */
        .order-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid #ddd;
            padding: 10px 0;
        }

        .order-item img {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            margin-right: 10px;
        }

        .order-item .order-details {
            flex-grow: 1;
        }

        .order-item .order-actions {
            display: flex;
            align-items: center;
        }

        .order-item .order-actions button {
            background-color: #2E8B57;
            color: white;
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 18px;
            margin: 0 5px;
        }

        /* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î */
        .form-control {
            border-radius: 8px;
            border: 2px solid #2E8B57;
        }

        /* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */
        .btn-order {
            background-color: #3CB371;
            font-size: 18px;
            padding: 10px;
            color: white;
            font-weight: bold;
            border-radius: 8px;
        }

        .add-to-cart {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            font-size: 18px;
            line-height: 20px;
            text-align: center;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }


        .btn-order:hover {
            background-color: #2E8B57;
        }

        .delivery-option.btn-success {
            color: white !important;
        }

        .schedule-option.btn-success {
            color: white !important;
        }

    </style>
</head>
<body class="d-flex flex-column min-vh-100">

    <%- include('partials/navbar') %>

    <div class="container mb-5">
        <div class="row g-4">
            <div class="col-md-6">
                <div class="card" p-3>
                    <h4>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</h4>
                    <div class="delivery-type" mb-3>
                        <button class="btn btn-outline-secondary delivery-option" data-type="‡∏à‡∏±‡∏î‡∏™‡πà‡∏á" >üöÄ ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 30 ‡∏ô‡∏≤‡∏ó‡∏µ</button>
                        <button class="btn btn-outline-secondary delivery-option" data-type="‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô" >üì¶ ‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô</button>
                    </div>
                    <input type="hidden" id="deliveryType" name="delivery_type" value="‡∏à‡∏±‡∏î‡∏™‡πà‡∏á">                    
                    <input type="text" style="display: none;" id="deliveryAddress" class="form-control mt-3" placeholder="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á">
                </div>
                <div class="card mt-3" id="pickupTimeSection" style="display: none;">
                    <h5>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô</h5>
                    <div class="mb-3">
                        <select class="form-select" id="deliveryTime" name="delivery_time">
                            <option value="" selected disabled>-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤ --</option>
                            <option value="10:00">10:00</option>
                            <option value="10:30">10:30</option>
                            <option value="11:00">11:00</option>
                            <option value="11:30">11:30</option>
                            <option value="12:00">12:00</option>
                            <option value="12:30">12:30</option>
                            <option value="13:00">13:00</option>
                            <option value="13:30">13:30</option>
                            <option value="14:00">14:00</option>
                            <option value="14:30">14:30</option>
                            <option value="15:00">15:00</option>
                            <option value="15:30">15:30</option>
                            <option value="16:00">16:00</option>
                            <option value="16:30">16:30</option>
                            <option value="17:00">17:00</option>
                            <option value="17:30">17:30</option>
                            <option value="18:00">18:00</option>
                            <option value="18:30">18:30</option>
                            <option value="19:00">19:00</option>
                            <option value="19:30">19:30</option>
                            <option value="20:00">20:00</option>
                        </select>
                    </div>                  
                </div>
                <div class="card mt-3">
                    <h5>‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h5>
                    <div class="mb-2">
                        <input type="radio" name="payment_method" value="‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î" checked> üíµ Cash (‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î)
                    </div>
                    <div class="mb-2">
                        <input type="radio" name="payment_method" value="‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡πÄ‡∏î‡∏ö‡∏¥‡∏ï"> üí≥ Credit/Debit Card (‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡πÄ‡∏î‡∏ö‡∏¥‡∏ï)
                    </div>
                    <div class="mb-2">
                        <input type="radio" name="payment_method" value="‡πÇ‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"> üì± Mobile Banking (‡πÇ‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <h4>‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</h4>
                    <div class="row mt-3 mb-5">
                        <% if (recommendedMenu && recommendedMenu.length > 0) { %>
                            <% recommendedMenu.forEach(item => { %>
                                <div class="col-md-4">
                                    <div class="menu-item text-start mt-2 position-relative p-3" style="background-color: #fff; border-radius: 12px;">
                                        <img src="<%= item.img ? item.img : '/img/default.jpg' %>" class="img-fluid w-100 mt-2">
                                        <p><%= item.name %> - <%= item.price %> THB</p>
                                        <button class="btn btn-success btn-sm add-to-cart" data-id="<%= item.menu_id %>" data-name="<%= item.name %>" data-price="<%= item.price %>" data-img="<%= item.img %>">
                                            <strong>+</strong>
                                        </button>
                                    </div>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</p>
                        <% } %>                        
                    </div>
                </div>
                <div class="card mt-3 order-summary p-3">
                    <h4>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (<%= cartItems ? cartItems.length : 0 %>)</h4>
                    <% if (cartItems.length > 0) { %>
                        <% cartItems.forEach(item => { %>
                            <div class="order-item d-flex justify-content-between align-items-center p-2 border-bottom">
                                <span><%= item.product_name %> x <%= item.quantity %> (<%= item.price * item.quantity %> ‡∏ø)</span>
                                <button class="btn btn-danger btn-sm remove-item" data-id="<%= item.id %>">‡∏•‡∏ö</button>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <p>No items in cart</p>
                    <% } %>                    
                </div>
                <div class="card mt-3">
                    <h4>‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h4>
                        <p id="subtotalAmount">Subtotal: ‡∏ø<%= typeof subtotal !== 'undefined' ? subtotal : 0 %></p>
                        <p>‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: ‡∏ü‡∏£‡∏µ</p>
                        <h5><span id="totalAmount">Total: ‡∏ø<%= typeof total !== 'undefined' ? total : 0 %></span></h5>
                    <button id="orderNow" class="btn btn-success w-100">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠<span id="totalAmount"></span></button>
                </div>
            </div>
        </div>

        <%- include('partials/footer') %>

    </div>

    <script>
        document.addEventListener("DOMContentLoaded", async function () {
            const totalElement = document.getElementById("totalAmount");
            const orderNowButton = document.getElementById("orderNow");
        
            if (!totalElement) {
                alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö Total Amount ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö!");
                return;
            }
        
            let total_price = parseFloat(totalElement.textContent.trim()) || 0;
            console.log("üì¶ Total Price ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡πÑ‡∏î‡πâ:", total_price);
        
            // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
            document.querySelectorAll(".add-to-cart").forEach(button => {
                button.addEventListener("click", async function () {
                    let product_id = this.dataset.id;
                    let name = this.dataset.name;
                    let price = parseFloat(this.dataset.price);
                    let quantity = 1;
        
                    try {
                        let response = await fetch('/cart/add', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ product_id, product_name: name, price, quantity })
                        });
        
                        let data = await response.json();
        
                        if (data.message) {
                            alert(`${name} 1 ‡∏ä‡∏¥‡πâ‡∏ô‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤!`);
                            await fetchCart(); // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                        } else {
                            alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${data.error}`);
                        }
                    } catch (error) {
                        console.error("‚ùå Error adding to cart:", error);
                        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
                    }
                });
            });
        
            // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
            document.querySelectorAll(".delivery-option").forEach(button => {
                button.addEventListener("click", function () {
                    document.getElementById("deliveryType").value = this.dataset.type;
        
                    document.querySelectorAll(".delivery-option").forEach(btn => btn.classList.remove("btn-success"));
                    this.classList.add("btn-success");
                    updateDeliveryUI(this.dataset.type);
                });
            });
        
            // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
            document.querySelectorAll(".schedule-option").forEach(button => {
                button.addEventListener("click", function () {
                    document.getElementById("deliveryTime").value = this.dataset.time;
        
                    document.querySelectorAll(".schedule-option").forEach(btn => btn.classList.remove("btn-success"));
                    this.classList.add("btn-success");
                });
            });

            function updateDeliveryUI(delivery_type) {
                const deliveryAddressInput = document.getElementById("deliveryAddress");
                const pickupTimeSection = document.getElementById("pickupTimeSection");
                const deliveryTime = document.getElementById("deliveryTime");
            
                // ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏î‡∏™‡πà‡∏á ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
                if (delivery_type === "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á") {
                    deliveryAddressInput.style.display = "block";
                    deliveryAddressInput.required = true;  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
                    pickupTimeSection.style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô
                } else {
                    deliveryAddressInput.style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
                    deliveryAddressInput.required = false;  // ‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
                    deliveryTime.required = true;
                    pickupTimeSection.style.display = "block"; // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô
                }
            }
        
            // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
            orderNowButton.addEventListener("click", async function () {
                if (orderNowButton.disabled) return; // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥
                orderNowButton.disabled = true;
        
                let user_id = localStorage.getItem("user_id");
        
                if (!user_id) {
                    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠!");
                    orderNowButton.disabled = false;
                    return;
                }
        
                let totalElement = document.getElementById("totalAmount");
                if (!totalElement || totalElement.textContent.trim() === "") {
                    alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÑ‡∏î‡πâ!");
                    orderNowButton.disabled = false;
                    return;
                }
                let total_price = parseFloat(totalElement.textContent.trim());


        
                let payment_method = document.querySelector('input[name="payment_method"]:checked')?.value;
                let delivery_type = document.getElementById("deliveryType").value;
                let delivery_time = document.getElementById("deliveryTime").value;
                let address = document.getElementById("deliveryAddress").value.trim();

                if (!delivery_type) {
                    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á!");
                    orderNowButton.disabled = false;
                    return;
                }
        
                if (delivery_type === "delivery" && !address) {
                    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏™‡πà‡∏á!");
                    orderNowButton.disabled = false;
                    return;
                }
                if (delivery_type === "pickup" && !delivery_time) {
                    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô!");
                    orderNowButton.disabled = false;
                    return;
                }
        
                console.log("üì¶ ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ API:", { user_id, total_price, payment_method, delivery_type, delivery_time, address });
        
                try {
                    let response = await fetch("http://localhost:3000/order", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ user_id, total_price, payment_method, delivery_type, delivery_time, address })
                    });
        
                    let data = await response.json();
        
                    if (data.success) {
                        alert("‚úÖ ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
                        window.location.href = `/`;
                    } else {
                        alert("‚ùå ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + data.message);
                    }
                } catch (error) {
                    console.error("‚ùå Order Error:", error);
                    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå!");
                } finally {
                    orderNowButton.disabled = false;
                }
            });
        
            // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
            async function fetchCart() {
                const response = await fetch('/cart/items');
                const data = await response.json();
        
                const cartBox = document.querySelector('.order-summary');
                let totalPrice = 0;
                let subtotal = 0;
        
                cartBox.innerHTML = `<h4>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (${data.cart.length})</h4>`;
        
                if (data.cart.length > 0) {
                    cartBox.innerHTML += data.cart.map(item => {
                        let itemTotal = item.price * item.quantity;
                        totalPrice += itemTotal;
                        subtotal += item.price * item.quantity;
        
                        return `
                            <div class="order-item d-flex justify-content-between align-items-center p-2 border-bottom">
                                <span>${item.product_name} x ${item.quantity} (${itemTotal} ‡∏ø)</span>
                                <button class="btn btn-danger btn-sm remove-item" data-id="${item.id}">‡∏•‡∏ö</button>
                            </div>
                        `;
                    }).join('');
                } else {
                    cartBox.innerHTML += "<p class='text-muted'>‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤</p>";
                }
        
                document.getElementById('totalAmount').textContent = `Total: ${totalPrice} THB`;
                document.getElementById('subtotalAmount').textContent = `Subtotal: ${subtotal}‡∏ø`;
        
                // ‚úÖ ‡πÅ‡∏ô‡∏ö event ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
                document.querySelectorAll('.remove-item').forEach(button => {
                    button.addEventListener('click', function () {
                        let product_id = this.dataset.id;
                        removeFromCart(product_id);
                    });
                });
            }
        
            // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
            async function removeFromCart(cartId) {
                console.log("Removing product ID:", cartId);
        
                try {
                    let response = await fetch('/cart/remove', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ cart_id: cartId })
                    });
        
                    let data = await response.json();
        
                    if (response.ok) {
                        alert('‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
                        await fetchCart(); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
                    } else {
                        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + data.error);
                    }
                } catch (error) {
                    console.error("‚ùå Error removing from cart:", error);
                    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
                }
            }
        
            // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
            await fetchCart();
        });
           
    </script>

</body>
</html> 
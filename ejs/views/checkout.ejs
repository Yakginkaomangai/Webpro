<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Checkout - Restaurant</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=DM+Serif+Text&family=Oswald:wght@200..700&family=Roboto+Slab:wght@100..900&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô */
        body {
            font-family: 'Roboto Slab', serif;
            background-color: #F0F2F5; /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î */
            color: #333;
            padding-top: 70px; /* ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô navbar ‡∏ö‡∏±‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ */
        }

        /* Navbar */
        .navbar {
            padding: 10px 0;
            background-color: #FFFFFF !important; /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß */
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand img {
            transition: transform 0.3s;
        }

        .navbar-brand img:hover {
            transform: scale(1.1);
        }

        .navbar-nav .nav-link {
            font-weight: bold;
            transition: color 0.3s;
            color: #333 !important; /* ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥ */
        }

        .navbar-nav .nav-link:hover {
            color: #2E8B57 !important;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏∏‡πà‡∏° Login / Register */
        .navbar-nav .nav-item .nav-link[href*="login.html"] {
            background-color: #2E8B57;
            border-radius: 8px;
            color: white !important;
            padding-left: 20px;
            padding-right: 20px;
            font-size: small;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏∏‡πà‡∏° */
        .btn {
            font-weight: bold;
            border-radius: 8px;
        }

        .btn-success {
            background-color: #2E8B57;
            border-color: #2E8B57;
        }

        .btn-success:hover {
            background-color: #228B22;
            border-color: #228B22;
        }

        /* ‡∏Å‡∏≤‡∏£‡πå‡∏î */
        .card {
            background: white;
            border-radius: 12px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-top: 20px;
        }

        .card h4, .card h5 {
            color: #2E8B57;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏°‡∏ô‡∏π */
        .menu-item {
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .menu-item:hover {
            transform: translateY(-5px);
            box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.15);
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏∏‡πà‡∏° Add to Cart */
        .btn.rounded-circle {
            width: 45px;
            height: 45px;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #2E8B57;
            border: none;
            transition: background 0.3s;
        }

        .btn.rounded-circle:hover {
            background-color: #228B22;
        }

        /* ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */
        .order-summary {
            border: 2px solid #2E8B57;
            background-color: #fff;
            padding: 15px;
            border-radius: 12px;
        }

        /* ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Order */
        .order-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid #ddd;
            padding: 10px 0;
        }

        .order-item img {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            margin-right: 10px;
        }

        .order-item .order-details {
            flex-grow: 1;
        }

        .order-item .order-actions {
            display: flex;
            align-items: center;
        }

        .order-item .order-actions button {
            background-color: #2E8B57;
            color: white;
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 18px;
            margin: 0 5px;
        }

        /* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î */
        .form-control {
            border-radius: 8px;
            border: 2px solid #2E8B57;
        }

        /* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */
        .btn-order {
            background-color: #3CB371;
            font-size: 18px;
            padding: 10px;
            color: white;
            font-weight: bold;
            border-radius: 8px;
        }

        .add-to-cart {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            font-size: 18px;
            line-height: 20px;
            text-align: center;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }


        .btn-order:hover {
            background-color: #2E8B57;
        }

        .delivery-option.btn-success {
            color: white !important;
        }

        .schedule-option.btn-success {
            color: white !important;
        }

    </style>
</head>
<body class="d-flex flex-column min-vh-100">
    <% include('partials/navbar') %>

    <div class="container mb-5">
        <div class="row g-4">
            <div class="col-md-6">
                <div class="card" p-3>
                    <h4>Delivery Types</h4>
                    <div class="delivery-type" mb-3>
                        <button class="btn btn-outline-secondary  delivery-option" data-type="delivery">üöÄ 30 Minutes Delivery</button>
                        <button class="btn btn-outline-secondary delivery-option" data-type="pickup">üì¶ Pick Up</button>
                    </div>
                    <input type="hidden" id="deliveryType" value="delivery">                    
                    <input type="text" class="form-control mt-3" placeholder="Add Delivery Address">
                </div>
                <div class="card mt-3">
                    <h5>Schedule Delivery</h5>
                    <div class="schedule-delivery">
                        <button class="btn btn-outline-secondary schedule-option" data-time="10:00">10:00</button>
                        <button class="btn btn-outline-secondary schedule-option" data-time="12:00">12:00</button>
                        <button class="btn btn-outline-secondary schedule-option" data-time="14:00">14:00</button>
                    </div>
                    <input type="hidden" id="deliveryTime" value="10:00">                    
                </div>
                <div class="card mt-3">
                    <h5>Payment Method</h5>
                    <div class="mb-2">
                        <input type="radio" name="payment" checked> üíµ Cash
                    </div>
                    <div class="mb-2">
                        <input type="radio" name="payment"> üí≥ Credit/Debit Card
                    </div>
                    <div class="mb-2">
                        <input type="radio" name="payment"> üì± Mobile Banking
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <h4>Recommended Menu</h4>
                    <div class="row mt-3 mb-5">
                        <% if (recommendedMenu && recommendedMenu.length > 0) { %>
                            <% recommendedMenu.forEach(item => { %>
                                <div class="col-md-4">
                                    <div class="menu-item text-start mt-2 position-relative p-3" style="background-color: #fff; border-radius: 12px;">
                                        <img src="<%= item.img ? item.img : '/img/default.jpg' %>" class="img-fluid w-100 mt-2">
                                        <p><%= item.name %> - <%= item.price %> THB</p>
                                        <button class="btn btn-success btn-sm add-to-cart" data-id="<%= item.menu_id %>" data-name="<%= item.name %>" data-price="<%= item.price %>" data-img="<%= item.img %>">
                                            <strong>+</strong>
                                        </button>
                                    </div>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <p>No recommended menu available</p>
                        <% } %>                        
                    </div>
                </div>
                <div class="card mt-3 order-summary p-3">
                    <h4>Order Items (<%= cartItems ? cartItems.length : 0 %>)</h4>
                    <% if (cartItems.length > 0) { %>
                        <% cartItems.forEach(item => { %>
                            <div class="order-item">
                                <img src="<%= item.img ? item.img : '/img/default.jpg' %>" alt="<%= item.name %>" style="width: 40px; height: 40px; border-radius: 8px;">
                                <p><%= item.name %> x<%= item.quantity %> (<%= item.price * item.quantity %> ‡∏ø)</p>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <p>No items in cart</p>
                    <% } %>                    
                </div>
                <div class="card mt-3">
                    <h4>Discounts & Order Summary</h4>
                    <div class="mb-2">
                        <input type="text" class="form-control" placeholder="Enter Promo Code">
                        <button class="btn btn-outline-success mt-2">Apply</button>
                    </div>
                    <p>Subtotal: ‡∏ø<%= typeof subtotal !== 'undefined' ? subtotal : 0 %></p>
                    <p>Delivery Fee: Free</p>
                    <h5>Total: ‡∏ø<%= typeof total !== 'undefined' ? total : 0 %></h5>
                    <button id="orderNow" class="btn btn-success w-100">Order Now ‡∏ø<span id="totalAmount"></span></button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".add-to-cart").forEach(button => {
                button.addEventListener("click", function () {
                    let product_id = this.dataset.id;
                    let name = this.dataset.name;
                    let price = parseFloat(this.dataset.price);
                    let img = this.dataset.img;

                    let cart = JSON.parse(localStorage.getItem("cart")) || [];

                    let existingItem = cart.find(item => item.product_id === product_id);
                    if (existingItem) {
                        existingItem.quantity += 1;
                    } else {
                        cart.push({ product_id, name, price, img, quantity: 1 });
                    }

                    localStorage.setItem("cart", JSON.stringify(cart));
                    alert(name + " ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤!");
                });
            });
        });

        
        document.getElementById("orderNow").addEventListener("click", function () {
            let user_id = localStorage.getItem("user_id"); // ‡∏î‡∏∂‡∏á user_id ‡∏à‡∏≤‡∏Å Session ‡∏´‡∏£‡∏∑‡∏≠ LocalStorage
            let cart = JSON.parse(localStorage.getItem("cart")) || [];
            let total = document.getElementById("totalAmount").innerText;
            let payment_method = document.querySelector('input[name="paymentMethod"]:checked').value;

            fetch("/order", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ user_id, items: cart, total, payment_method })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Order placed successfully! Redirecting...");
                    window.location.href = `/receipt/${data.payment_id}`;
                } else {
                    alert("Order failed. Please try again.");
                }
            })
            .catch(error => console.error("Order Error:", error));
        });


        document.addEventListener("DOMContentLoaded", function () {
            let cart = JSON.parse(localStorage.getItem("cart")) || [];
            let cartContainer = document.getElementById("cart-items");
            let totalPrice = 0;
        
            if (cart.length === 0) {
                cartContainer.innerHTML = "<p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤</p>";
            } else {
                cartContainer.innerHTML = cart.map(item => `
                    <li>${item.name} x ${item.quantity} (${item.price * item.quantity} ‡∏ö‡∏≤‡∏ó)</li>
                `).join("");
                totalPrice = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
            }
        
            document.getElementById("total-price").textContent = `‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°: ${totalPrice} ‡∏ö‡∏≤‡∏ó`;
        
            document.getElementById("submitOrder").addEventListener("click", function () {
                fetch("/submit-order", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ cart })
                })
                .then(response => response.json())
                .then(data => {
                    alert("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå: " + data.orderId);
                    localStorage.removeItem("cart"); // ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                    window.location.href = "/";
                })
                .catch(error => console.error("Error:", error));
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
            document.querySelectorAll(".delivery-option").forEach(button => {
                button.addEventListener("click", function () {
                    document.getElementById("deliveryType").value = this.dataset.type;

                    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                    document.querySelectorAll(".delivery-option").forEach(btn => btn.classList.remove("btn-success"));
                    this.classList.add("btn-success");
                });
            });

            document.addEventListener("DOMContentLoaded", function () {
                document.querySelectorAll(".add-to-cart").forEach(button => {
                    button.addEventListener("click", function () {
                        let user_id = localStorage.getItem("user_id") || 1; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î user_id (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ)
                        let product_id = this.dataset.id;
                        let name = this.dataset.name;
                        let price = parseFloat(this.dataset.price);
                        let img = this.dataset.img;

                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ user_id ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                        if (!user_id) {
                            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤!");
                            return;
                        }

                        // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
                        fetch("/add-to-cart", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ user_id, product_id, name, price, img })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert(name + " ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤! ‚úÖ");
                            } else {
                                alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‚ùå " + data.error);
                            }
                        })
                        .catch(error => console.error("Cart Error:", error));
                    });
                });
            });



            // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤
            document.querySelectorAll(".schedule-option").forEach(button => {
                button.addEventListener("click", function () {
                    document.getElementById("deliveryTime").value = this.dataset.time;

                    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                    document.querySelectorAll(".schedule-option").forEach(btn => btn.classList.remove("btn-success"));
                    this.classList.add("btn-success");
                });
            });
        });

        document.getElementById("orderNow").addEventListener("click", function () {
            let user_id = localStorage.getItem("user_id");
            let cart = JSON.parse(localStorage.getItem("cart")) || [];
            let total = document.getElementById("totalAmount").innerText;
            let payment_method = document.querySelector('input[name="paymentMethod"]:checked').value;
            let delivery_type = document.getElementById("deliveryType").value;
            let delivery_time = document.getElementById("deliveryTime").value;

            fetch("/order", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ user_id, items: cart, total, payment_method, delivery_type, delivery_time })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Order placed successfully! Redirecting...");
                    window.location.href = `/receipt/${data.payment_id}`;
                } else {
                    alert("Order failed. Please try again.");
                }
            })
            .catch(error => console.error("Order Error:", error));
        });


    </script>

    <% include('partials/footer') %>
</body>
</html> 
